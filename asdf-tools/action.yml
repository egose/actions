name: Install asdf tools

inputs:
  version:
    description: The version of asdf
    default: v0.16.2
    required: false
  plugins:
    description: List of additional plugins (e.g., <plugin>=<url>, comma-separated)
    required: false
  context:
    description: Directory of the file .tool-versions located
    default: .
    required: false

runs:
  using: composite
  steps:
  - name: Install asdf
    run: |
      set -e
      echo "🏠$HOME"
      curl -fsSL -o asdf.tar.gz "https://github.com/asdf-vm/asdf/releases/download/${{ inputs.version }}/asdf-${{ inputs.version }}-linux-amd64.tar.gz"
      tar -xzf asdf.tar.gz
      rm -f asdf.tar.gz
      mv asdf /usr/local/bin/
      echo "${ASDF_DATA_DIR:-~/.asdf}/shims" >> $GITHUB_PATH
      echo "✅asdf installed successfully"
    shell: bash

  - name: Cache tools
    # See https://github.com/actions/cache/commits/main/
    uses: actions/cache@36f1e144e1c8edb0a652766b484448563d8baf46
    with:
      path: ~/.asdf
      key: ${{ runner.os }}-${{ inputs.version }}-${{ hashFiles('**/.tool-versions') }}

  - name: Install asdf tools
    run: |
      asdf --version
      echo "$PATH"
      echo ${{ inputs.context }}
      cd ${{ inputs.context }}

      plugins_str=$'${{ inputs.plugins }}'
      plugins=(${plugins_str//$'\n'/ })

      echo "✅Adding additional plugins..."
      for plugin in "${plugins[@]}"
      do
        readarray -d '=' -t keyurl <<< "$plugin"
        if (( ${#keyurl[@]} < 2 )); then
          continue
        fi

        echo "➡️${keyurl[0]} ${keyurl[1]}..."
        asdf plugin add ${keyurl[0]} ${keyurl[1]} || true
      done

      echo "✅Adding main plugins..."
      cat .tool-versions | cut -f 1 -d ' ' | xargs -n 1 asdf plugin add || true
      asdf plugin update --all

      echo "✅Installing tools..."
      while read -r line; do
        # Skip empty lines or lines starting with comments (#)
        if [[ -n "$line" && ! "$line" =~ ^# ]]; then
          tool=$(echo "$line" | awk '{print $1}')
          version=$(echo "$line" | awk '{print $2}')

          echo "➡️$tool $version..."
          asdf install "$tool" "$version" || true
        fi
      done < .tool-versions

      asdf reshim
      asdf install || true
    shell: bash
